spring.datasource.druid.master.name=product_master
spring.datasource.druid.master.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.master.url=jdbc:mysql://localhost/product_slave?useSSL=false
spring.datasource.druid.master.port=3306
spring.datasource.druid.master.username=root
spring.datasource.druid.master.password=yuantu123

spring.datasource.druid.slave.name=product_slave
spring.datasource.druid.slave.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.slave.url=jdbc:mysql://localhost/product_slave?useSSL=false
spring.datasource.druid.slave.port=3306
spring.datasource.druid.slave.username=root
spring.datasource.druid.slave.password=yuantu123

# Druid dataSource config
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#启动程序时，在连接池中初始化多少个连接
spring.datasource.druid.initial-size=5
#连接池中最多支持多少个活动会话
spring.datasource.druid.max-active=20
#回收空闲连接时，将保证至少有minIdle个连接. 与initialSize相同
spring.datasource.druid.min-idle=5
#程序向连接池中请求连接时,超过maxWait的值后，认为本次请求失败
spring.datasource.druid.max-wait=60000
# 缓存通过以下两个方法发起的SQL: public PreparedStatement prepareStatement(String sql)、public PreparedStatement prepareStatement(String sql,int resultSetType, int resultSetConcurrency)
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

spring.datasource.druid.max-open-prepared-statements=20
#检查池中的连接是否仍可用的 SQL 语句,drui会连接到数据库执行该SQL, 如果正常返回，则表示连接可用，否则表示连接不可用 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
spring.datasource.druid.validation-query=SELECT 1
spring.datasource.druid.validation-query-timeout=30000
#程序 申请 连接时,进行连接有效性检查（低效，影响性能） false
spring.datasource.druid.test-on-borrow=false
#程序 返还 连接时,进行连接有效性检查（低效，影响性能） false
spring.datasource.druid.test-on-return=false
# 当程序请求连接，池在分配连接时，是否先检查该连接是否有效。(高效) 建议 true
spring.datasource.druid.test-while-idle=false
#spring.datasource.druid.time-between-eviction-runs-millis=
#spring.datasource.druid.min-evictable-idle-time-millis=
#spring.datasource.druid.max-evictable-idle-time-millis=10000

# 这里配置的是插件,常用的插件有:stat：监控统计,wall：防御SQL注入,slf4j：日志监控
# Druid stat filter config
spring.datasource.druid.filters=stat,wall,log4j,slf4j
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/druid/*
#spring.datasource.druid.web-stat-filter.exclusions=
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=10
#spring.datasource.druid.web-stat-filter.principal-session-name=
#spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=true
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=1000
spring.datasource.druid.filter.stat.merge-sql=true
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=true
spring.datasource.druid.filter.wall.config.drop-table-allow=false
# 配置druid监控信息显示页面
# Druid manage page config
spring.datasource.druid.stat-view-servlet.enabled=true
#指定拦截器只拦截druid管理页面的请求
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=admin
spring.datasource.druid.stat-view-servlet.login-password=admin
#spring.datasource.druid.stat-view-servlet.allow=
#spring.datasource.druid.stat-view-servlet.deny=

# spring容器监控
# Druid AOP config
spring.datasource.druid.aop-patterns=cn.com.hellowood.dynamicdatasource.service.*,cn.com.hellowood.dynamicdatasource.mapper.*,cn.com.hellowood.dynamicdatasource.controller.*
spring.aop.proxy-target-class=true

# mybatis 配置
mybatis.type-aliases-package=cn.com.hellowood.dynamicdatasource.mapper
mybatis.mapper-locations=mappers/**Mapper.xml

server.port=9999